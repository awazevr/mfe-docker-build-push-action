name: "MFE Docker Build and Push"
description: "Docker build and pushing mfe docker image to ECR Registry ..."
inputs:
  aws-access-key-id:
    description: 'AWS Access Key Id'
    required: true

  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true

  aws-region:
    description: 'AWS Resource Region'
    required: true

  ecr-repository:
    description: 'AWS Elastic Container Registry Repository'
    required: true

  bit-token:
    description: 'BIT Access Token'
    required: true

  pat-token:
    description: 'Github PAT Token'
    required: true
  build-only:
    description: 'Only build, do not push assets (true/false)'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update .npmrc
      run: |
        echo -e "\n" >> .npmrc
        echo -e "//node.bit.dev/:_authToken=${{ inputs.bit-token }}" >> .npmrc
        echo -e "//npm.pkg.github.com/:_authToken=${{ inputs.pat-token }}" >> .npmrc 
      shell: bash
    
    - name: Build and push
      uses: docker/build-push-action@v2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        GIT_SHA: ${{ steps.short-sha.outputs.sha }}
      with:
        context: .
        push: ${{ inputs.build-only != true }}
        build-args: GIT_HASH=${{ env.GIT_SHA }}
        tags: ${{ env.ECR_REGISTRY }}/${{ inputs.ecr-repository }}:${{ env.GIT_SHA }},${{ env.ECR_REGISTRY }}/${{ inputs.ecr-repository }}:latest
    
    - name: Copy static assets from docker container
      if: ${{ inputs.build-only != true }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        GIT_SHA: ${{ steps.short-sha.outputs.sha }}
      run: docker cp $(docker create --rm ${{ env.ECR_REGISTRY }}/${{ inputs.ecr-repository }}:${{ env.GIT_SHA }}):/usr/src/app/.next ./.next
      shell: bash

    - uses: actions/upload-artifact@v2
      if: ${{ inputs.build-only != true }}
      with:
        name: next-static-assets
        path: ./.next
    - uses: actions/upload-artifact@v2
      if: ${{ inputs.build-only != true }}
      with:
        name: public-static-assets
        path: ./public
